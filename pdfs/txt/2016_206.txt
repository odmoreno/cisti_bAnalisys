Evaluating the efficient of using choice functions to solve CSPs via Autonomous Search
ABSTRACT
Constraint programming is a powerful paradigm that allows for solving optimization and constraint satisfaction problems (CSPs). In this context, a main concern of this technology is that the efficient problem resolution usually relies on the employed solving strategy. Unfortunately, selecting the proper one is known to be complex as the behavior of strategies is commonly unpredictable. Recently, Autonomous Search appeared as a new technique to tackle this concern. The idea is to let the solver adapt its strategy during solving time in order to improve performance. This task is controlled by a choice function which decides, based on performance information, how the strategy must be updated. In this paper, we evaluate the impact on the solving phase of 16 different choice functions. We employ as test bed a set of well-known benchmarks that collect general features present on most CSPs. Interesting experimental results are obtained in order to provide the best-performing choice functions for solving CSPs.
