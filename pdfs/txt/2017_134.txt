An approach to investigate aging symptoms and rejuvenation effectiveness on software systems
ABSTRACT
Software aging is a cumulative process which can lead long-running systems to failures. Software rejuvenation is the countermeasure of software aging. Rejuvenation actions usually comprise system reboot or application restart. Software aging appears as a significant concern for the reliability of software systems. Therefore, techniques and methods to analyze software aging and rejuvenation are of utmost importance. This paper proposes an approach based on experiments and empirical observation to investigate aging and rejuvenation on software systems. The approach has three phases: (i) Stress Phase - stress environment with the accelerated workload to induce bugs activation; (ii) Wait - stop workload submission to observe impact caused in software status; (iii) Rejuvenation Phase - submit rejuvenation action to perceive changes in the software internal state. To validate the proposed approach this paper presents a case study. This case study consists of an experiment of VM Live Migration as rejuvenation mechanism for VMM software aging. The considered testbed is a private Cloud with OpenNebula and KVM 1.0. The obtained results show that VM live migration is effective as rejuvenation for VMM software aging.
