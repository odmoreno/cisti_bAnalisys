Use of SQALE and tools for analysis and identification of code technical debt through static analysis
ABSTRACT
Technical Debt (TD), also known as technical debt design or technical debt code, analyze the consequence that could have a system once it has been designed architecturally, coding or implemented. TD refers to work to be performed rather than software design or coding is considered complete or correct. Static analysis is a technique to identify and analyze software characteristics from source code; through static analysis we can identify elements such as packages, classes, relationships, lines of code (LOC's), bugs, complexity, coding violations and others. In addition subsystems, components and their relationships supported by tools, algorithms, frameworks to analyze the code were identified. SQALE[1] is a quality and analysis model contains the internal properties expected from the code in the context of the evaluation, it has been used to perform many assessments of software source code, of various sizes in different application domains and programming language. SonarQube[2], Kiuwan[3] and PMD[4] are an open source platform to manage the source code quality, this cover seven axes of code quality among which stand: architecture and design, duplications, unit test, complexity, potential bugs, codifications rules, comments, among others; this platform work with over 20 programming languages. This paper, use as input the source code of the software applications written in different programming language for through static analysis identify metrics, characteristics, and technical debt with the aim to improve the quality when writing code, also supported in static analysis identify aspects such as correct apply of quality attributes, standards and best practices of programming that based in ISO 9126 and SQALE ensure the correct software development in terms of design and coding.
